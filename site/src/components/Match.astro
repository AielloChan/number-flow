---
import { getFramework, type Framework } from '@/lib/framework'

type Props =
	| {
			[framework in Framework]?: string
	  }
	| {
			[framework in Framework]?: true
	  }

// We can't use a loop here because Astro needs the slot names to be static strings
const { react, vue, svelte } = Astro.props
const framework = getFramework(Astro.params)
const noBool = typeof react !== 'boolean' && typeof vue !== 'boolean' && typeof svelte !== 'boolean'
---

{
	framework === 'react' &&
		(typeof react == 'string' ? (
			react
		) : Astro.slots.has('react') ? (
			<slot name="react" />
		) : (
			(react || noBool) && <slot />
		))
}{
	framework === 'vue' &&
		(typeof vue == 'string' ? (
			vue
		) : Astro.slots.has('vue') ? (
			<slot name="vue" />
		) : (
			(vue || noBool) && <slot />
		))
}{
	framework === 'svelte' &&
		(typeof svelte == 'string' ? (
			svelte
		) : Astro.slots.has('svelte') ? (
			<slot name="svelte" />
		) : (
			(svelte || noBool) && <slot />
		))
}
