---
import { toFrameworkPath, getFramework, DEFAULT_FRAMEWORK } from '@/lib/framework'
import { isActive } from '@/lib/url'
import type { HTMLAttributes } from 'astro/types'
export interface Props extends HTMLAttributes<'a'> {
	href: string
}
const pageFramework = getFramework(Astro.params)
const { href, ...props } = Astro.props
---

<a
	{...props}
	data-framework-link
	data-active={isActive(
		toFrameworkPath(href, DEFAULT_FRAMEWORK),
		toFrameworkPath(Astro.url.pathname, DEFAULT_FRAMEWORK)
	)}
	href={toFrameworkPath(href, pageFramework)}
>
	<slot />
</a>

<script>
	import { toFrameworkPath, type Framework } from '@/lib/framework'

	const pageFramework = document.documentElement.dataset.framework
	if (!pageFramework) {
		const savedFramework = localStorage.getItem('framework') as Framework | undefined
		if (savedFramework) {
			document.querySelectorAll<HTMLAnchorElement>('a[data-framework-link]').forEach((el) => {
				el.setAttribute('href', toFrameworkPath(el.getAttribute('href'), savedFramework)!)
			})
		}
	}
</script>
