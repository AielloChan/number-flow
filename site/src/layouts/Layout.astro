---
import '@/assets/main.css'
import preview from '@/assets/preview.png'
import { getImage } from 'astro:assets'
import pkg from '/../packages/number-flow/package.json'
import { GITHUB_TOKEN } from 'astro:env/server'
// import FrameworkMenu from '@/components/FrameworkMenu'
import { getFramework, FRAMEWORKS, toFrameworkPath, DEFAULT_FRAMEWORK } from '@/lib/framework'
import FrameworkLink from '@/components/FrameworkLink.astro'
import { BookOpen, Shapes, GalleryVerticalEnd } from 'lucide-react'
import { AstroFont } from 'astro-font'
import * as path from 'node:path'
import { isActive } from '@/lib/url'

const repoPath = 'barvian/motion-number'
const repo = await fetch(`https://api.github.com/repos/${repoPath}`, {
	headers: {
		Authorization: `Bearer ${GITHUB_TOKEN}`,
		'X-GitHub-Api-Version': '2022-11-28'
	}
}).then((r) =>
	r.ok ? r.json() : Promise.reject(`Could not fetch repo ${repoPath}: ${r.statusText}`)
)

const frameworkId = getFramework(Astro.params)
const framework = frameworkId && FRAMEWORKS[frameworkId]

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const previewOptimized = await getImage({ src: preview, format: 'png' })
const image = import.meta.env.URL
	? new URL(previewOptimized.src, import.meta.env.URL)
	: previewOptimized.src

type Props = {
	title: string
	description: string
}

const { title, description } = Astro.props

const app = {
	'@context': 'https://schema.org',
	'@type': 'WebSite',
	name: 'Number Flow',
	alternateName: ['number-flow'],
	url: Astro.site
}
---

<html
	lang="en"
	data-framework={frameworkId || undefined}
	class="text-primary min-h-screen scroll-pt-10 overflow-x-hidden bg-white antialiased motion-safe:scroll-smooth dark:bg-zinc-950"
>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<meta name="twitter:creator" content="@mbarvian" />
		<meta property="og:type" content="article" />
		<meta property="og:image" content={image} />
		<meta property="og:site_name" content="NumberFlow" />
		<meta name="twitter:card" content="summary_large_image" />
		<meta property="twitter:image" content={image} />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<style
			define:vars={{ frameworkLight: framework?.lightColor, frameworkDark: framework?.darkColor }}
		>
			:root {
				@apply [--color-framework:var(--frameworkLight)] dark:[--color-framework:var(--frameworkDark)];
			}
		</style>
		<AstroFont
			config={[
				{
					name: 'Inter',
					src: [
						{
							weight: '100 900',
							style: 'normal',
							path: path.join(process.cwd(), 'public', 'fonts', 'Inter-roman-latin.var.woff2')
						}
					],
					preload: true,
					display: 'swap',
					cssVariable: 'font-inter',
					fallback: 'sans-serif'
				}
			]}
		/>
		<link rel="canonical" href={canonicalURL} />
		<meta property="og:title" content={title} />
		<meta name="twitter:title" content={title} />
		<meta name="description" content={description} />
		<meta property="og:description" content={description} />
		<meta name="twitter:description" content={description} />
		<script type="application/ld+json" set:html={JSON.stringify(app)} />
	</head>
	<body class="~pt-12/28 ~pb-32/56">
		<div class="container whitespace-nowrap text-center">
			{
				toFrameworkPath(Astro.url.pathname, DEFAULT_FRAMEWORK) === '/' ? (
					<h1 class="inline font-medium">
						NumberFlow
						<span class="text-muted text-sm font-medium">v{pkg.version}</span>
					</h1>
				) : (
					<FrameworkLink class="font-medium" href="/">
						NumberFlow
					</FrameworkLink>
				)
			}
			{
				/*
				frameworkId && (
					<>
						&nbsp;for
						<FrameworkMenu
							className="ml-0 relative top-[.1875rem]"
							url={Astro.url}
							value={frameworkId}
							client:load
						/>
					</>
				)
			 */
			}
		</div>
		<nav class="~pb-6/10 pointer-events-none fixed bottom-0 left-0 z-10 w-full pt-12">
			<div
				class="absolute -inset-[18px] top-auto h-[12rem] bg-gradient-to-t from-white to-white/0 blur-[10px] dark:from-zinc-950 dark:to-zinc-950/0"
			>
			</div>
			<div class="container relative flex justify-center">
				<div
					class="scrollbar-none pointer-events-auto max-w-full overflow-x-auto rounded-[1.375rem] bg-zinc-100/90 p-1.5 ring ring-black/[5%] backdrop-blur-xl backdrop-saturate-[140%] dark:bg-zinc-950/90 dark:ring-inset dark:ring-white/[8%]"
				>
					<div class="grid grid-cols-[repeat(5,5.6875em)]">
						<FrameworkLink
							href="/"
							class="text-muted hover:text-primary data-[active]:text-primary dark:data-[active]:bg-white/12.5 flex flex-col items-center gap-1.5 rounded-2xl px-4 pb-1.5 pt-2.5 text-xs font-medium outline-none transition-[color] focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-blue-500 data-[active]:bg-white data-[active]:shadow-lg dark:data-[active]:shadow-none"
						>
							<BookOpen className="size-6" absoluteStrokeWidth />
							Docs
						</FrameworkLink>
						<FrameworkLink
							href="/examples"
							class="text-muted hover:text-primary data-[active]:text-primary dark:data-[active]:bg-white/12.5 flex flex-col items-center gap-1.5 rounded-2xl px-4 pb-1.5 pt-2.5 text-xs font-medium outline-none transition-[color] focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-blue-500 data-[active]:bg-white data-[active]:shadow-lg dark:data-[active]:shadow-none"
						>
							<Shapes className="size-6" absoluteStrokeWidth />
							Examples
						</FrameworkLink>
						<a
							data-active={isActive('/showcase', Astro.url)}
							class="text-muted hover:text-primary data-[active]:text-primary dark:data-[active]:bg-white/12.5 flex flex-col items-center gap-1.5 rounded-2xl px-4 pb-1.5 pt-2.5 text-xs font-medium outline-none transition-[color] focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-blue-500 data-[active]:bg-white data-[active]:shadow-lg dark:data-[active]:shadow-none"
							href="/showcase"
						>
							<GalleryVerticalEnd className="size-6 -scale-y-100" absoluteStrokeWidth />
							Showcase
						</a>
						<a
							class="text-muted hover:text-primary data-[active]:text-primary dark:data-[active]:bg-white/12.5 flex flex-col items-center gap-1.5 rounded-2xl px-4 pb-1.5 pt-2.5 text-xs font-medium outline-none transition-[color] focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-blue-500 data-[active]:bg-white data-[active]:shadow-lg dark:data-[active]:shadow-none"
							href={pkg.repository.url}
							target="_blank"
							aria-label="Star on GitHub"
						>
							<svg viewBox="0 0 16 16" class="size-6 fill-current" role="none">
								<path
									d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"
								></path>
							</svg>
							{repo.stargazers_count}
						</a>
						<a
							href="https://x.com/mbarvian"
							class="text-muted hover:text-primary data-[active]:text-primary dark:data-[active]:bg-white/12.5 flex flex-col items-center gap-1.5 rounded-2xl px-4 pb-1.5 pt-2.5 text-xs font-medium outline-none transition-[color] focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-blue-500 data-[active]:bg-white data-[active]:shadow-lg dark:data-[active]:shadow-none"
							target="_blank"
						>
							<svg viewBox="0 0 24 24" class="size-6 fill-current">
								<path
									d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
								></path>
							</svg>
							Follow
						</a>
					</div>
				</div>
			</div>
		</nav>

		<main class="overflow-x-clip">
			<slot />
		</main>
	</body>
</html>
